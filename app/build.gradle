buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.17"
    }
}

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'org.jetbrains.dokka-android'

// Creates a variable called keystorePropertiesFile, and initializes it to the
// keys.properties file.
def keystorePropertiesFile = rootProject.file("mykeys.properties")
// Initializes a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Loads the keys.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        configrelease {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.arvifox.arvi"
        renderscriptTargetApi 11
        renderscriptSupportModeEnabled true
        vectorDrawables {
            useSupportLibrary true
        }
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        manifestPlaceholders = [googleGeoApiKey: keystoreProperties['googleGeoApiKey']]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.configrelease
        }
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "ARVI_API_URL", "\"" + keystoreProperties['arviApiUrl'] + "\""
            variant.buildConfigField "String", "FLICKR_KEY", "\"" + keystoreProperties['flickrKey'] + "\""
            variant.buildConfigField "String", "TMDB_KEY", "\"" + keystoreProperties['tmdb'] + "\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    sourceSets {
        main.res.srcDirs += ['src/main/res-some']
    }
//    ndk {
    /*
             * Sceneform is available for the following ABIs: arm64-v8a, armv7a,
             * x86_64 and x86. This sample app enables arm64-v8a to run on
             * devices and x86 to run on the emulator. Your application should
             * list the ABIs most appropriate to minimize APK size (arm64-v8a recommended).
             */
//        abiFilters 'arm64-v8a', 'x86'
//    }
//    androidExtensions {
//        experimental = true
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.1.0-alpha07'
//    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta1'
    implementation 'androidx.annotation:annotation:1.1.0'

    //test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.work:work-testing:2.0.1'
    androidTestImplementation 'androidx.arch.core:core-testing:2.0.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    //arch
    implementation "androidx.work:work-runtime-ktx:2.0.1"
    implementation "androidx.work:work-rxjava2:2.0.1"
    androidTestImplementation "androidx.work:work-testing:2.0.1"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:1.0.0-alpha01'

    //moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.8.0'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.8.0"

    //retrofit okhttp
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit-mock:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // AR core, Sceneform
    implementation 'com.google.ar:core:1.9.0'
    implementation 'com.google.ar.sceneform:core:1.9.0'
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.9.0'

    //firebase
    implementation 'com.google.firebase:firebase-messaging:18.0.0'
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.google.android.gms:play-services-base:16.1.0'
    implementation 'com.google.android.gms:play-services-gcm:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'

    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"

    //picasso
    implementation("com.squareup.picasso:picasso:2.5.2") {
        exclude group: "com.android.support"
    }
    // glide
    implementation "com.github.bumptech.glide:glide:4.8.0"

    // viewpager
    implementation "androidx.viewpager2:viewpager2:1.0.0-alpha05"

    //ar vr vision
    implementation 'com.google.apis:google-api-services-vision:v1-rev16-1.22.0'
    implementation('com.google.api-client:google-api-client-android:1.22.0') {
        exclude module: 'httpclient'
    }
    implementation('com.google.http-client:google-http-client-gson:1.20.0') {
        exclude module: 'httpclient'
    }

    // ConcealerNestedScrollView & ConcealerRecyclerView
    // A library to make views hide from top and bottom while scrolling a custom NestedScrollView and\or a custom RecyclerView
    // https://github.com/SIMMORSAL/ConcealerNestedScrollView-ConcealerRecyclerView
    implementation 'com.simmorsal.library:concealer_nested_scroll_view:2.0.0'

}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.ar.sceneform.plugin'

repositories {
    mavenCentral()
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/kotlindoc"
}


sceneform.asset('sampledata/model.fbx',
        'default',
        'sampledata/model.sfa',
        'src/main/res/raw/model')
